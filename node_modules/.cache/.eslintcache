[{"D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\index.tsx":"1","D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\reportWebVitals.ts":"2","D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\App.tsx":"3","D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\service\\ShoppingCartService.ts":"4","D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\util\\LocalStorageUtil.ts":"5","D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\ui\\page\\ShoppingCartPage\\index.tsx":"6","D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\ui\\page\\ProductListingPage\\index.tsx":"7","D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\ui\\page\\CheckoutPage\\index.tsx":"8","D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\extService\\BackendExtService.ts":"9","D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\ui\\component\\ProductList\\index.tsx":"10","D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\ui\\component\\quantity\\index.tsx":"11","D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\ui\\page\\ThankyouPage\\index.tsx":"12","D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\ui\\page\\HomePage\\index.tsx":"13","D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\service\\AuthService.ts":"14","D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\extService\\BackendAuthExtService.ts":"15","D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\ui\\page\\LoginPage\\index.tsx":"16","D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\ui\\page\\WeatherPage\\index.tsx":"17","D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\ui\\page\\ProductDetailPage\\index.tsx":"18","D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\config\\config.ts":"19","D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\config\\prodConfig.ts":"20","D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\config\\devConfig.ts":"21","D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\ui\\component\\ContactUsSection\\index.tsx":"22"},{"size":568,"mtime":1618555183561,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":6277,"mtime":1618555183330,"results":"26","hashOfConfig":"24"},{"size":1152,"mtime":1618555183574,"results":"27","hashOfConfig":"24"},{"size":564,"mtime":1617159891519,"results":"28","hashOfConfig":"24"},{"size":6402,"mtime":1618567322944,"results":"29","hashOfConfig":"24"},{"size":2256,"mtime":1617255801325,"results":"30","hashOfConfig":"24"},{"size":5553,"mtime":1618567437640,"results":"31","hashOfConfig":"24"},{"size":3130,"mtime":1618555210326,"results":"32","hashOfConfig":"24"},{"size":3540,"mtime":1618567931498,"results":"33","hashOfConfig":"24"},{"size":1353,"mtime":1618555183600,"results":"34","hashOfConfig":"24"},{"size":499,"mtime":1618555183691,"results":"35","hashOfConfig":"24"},{"size":2781,"mtime":1618555183615,"results":"36","hashOfConfig":"24"},{"size":4396,"mtime":1618555183567,"results":"37","hashOfConfig":"24"},{"size":648,"mtime":1618555183424,"results":"38","hashOfConfig":"24"},{"size":3697,"mtime":1618555183637,"results":"39","hashOfConfig":"24"},{"size":329,"mtime":1618555183699,"results":"40","hashOfConfig":"24"},{"size":4618,"mtime":1618555183665,"results":"41","hashOfConfig":"24"},{"size":241,"mtime":1618555183336,"results":"42","hashOfConfig":"24"},{"size":184,"mtime":1618555183365,"results":"43","hashOfConfig":"24"},{"size":160,"mtime":1618555183356,"results":"44","hashOfConfig":"24"},{"size":2679,"mtime":1618555183579,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"omdfhz",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"48"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"48"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"48"},"D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\index.tsx",[],["108","109"],"D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\reportWebVitals.ts",[],"D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\App.tsx",["110","111","112","113","114","115","116","117"],"import { faShoppingCart, faSnowboarding, faSignOutAlt, faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Container, Nav, Spinner } from 'react-bootstrap';\r\nimport Navbar from 'react-bootstrap/esm/Navbar';\r\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport AuthService from './service/AuthService';\r\nimport ShoppingCartService from './service/ShoppingCartService';\r\nimport CheckoutPage from './ui/page/CheckoutPage';\r\nimport LoginPage from './ui/page/LoginPage';\r\nimport ProductListingPage from './ui/page/ProductListingPage';\r\nimport ProductDetailPage from './ui/page/ProductDetailPage';\r\nimport ShoppingCartPage from './ui/page/ShoppingCartPage';\r\nimport snowboardLogo from './image/snowboardLogo.png';\r\nimport HomePage from './ui/page/HomePage';\r\nimport Thankyoupage from './ui/page/ThankyouPage';\r\nimport { MDBCol, MDBContainer, MDBFooter, MDBRow } from 'mdbreact';\r\nimport WeatherPage from './ui/page/WeatherPage';\r\nimport ContactUsSection from './ui/component/ContactUsSection';\r\n\r\n\r\ntype Props = {};\r\ntype State = {\r\n    isLoading: boolean\r\n};\r\n\r\nexport default class App extends React.Component<Props, State> {\r\n    state = {\r\n        isLoading: false\r\n    } as State;\r\n\r\n  shoppingCartService: ShoppingCartService;\r\n  authService: AuthService;\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.onAuthStateChange = this.onAuthStateChange.bind(this);\r\n    this.onClickSignOut = this.onClickSignOut.bind(this);\r\n\r\n    this.shoppingCartService = new ShoppingCartService();\r\n    this.authService = new AuthService(this.onAuthStateChange);\r\n\r\n    \r\n\r\n  }\r\n\r\n  onAuthStateChange(isLoading: boolean){\r\n    this.setState({\r\n        \"isLoading\": isLoading\r\n    })\r\n  }\r\n\r\n  onClickSignOut(event: React.MouseEvent<any>){\r\n      event.preventDefault();\r\n      this.authService.signOut();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.authService.init();\r\n  }\r\n\r\n  render() {\r\n      let loadingOverlayClassName = \"loadingOverlay\";\r\n      if(this.state.isLoading){\r\n          loadingOverlayClassName += \" active\";\r\n      }\r\n    return (\r\n      <div className=\"App\">\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n          <Container><Navbar.Brand href= \"/\" ><img className='Navbarlogo'src={snowboardLogo}/>Ventail</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse className=\"justify-content-end\"></Navbar.Collapse>\r\n            <Nav.Link href=\"#/cart\"><FontAwesomeIcon icon={faShoppingCart} /></Nav.Link>\r\n            {\r\n                (AuthService.isSignedIn() ? \r\n                    (<Nav.Link onClick={this.onClickSignOut}>\r\n                        <FontAwesomeIcon icon={faSignOutAlt}/>\r\n                    </Nav.Link>\r\n                    ) : (\r\n                    <Nav.Link href=\"#/login\">\r\n                        <FontAwesomeIcon icon={faUser} />\r\n                    </Nav.Link>)\r\n                )\r\n            }\r\n            \r\n          </Container>\r\n        </Navbar>\r\n          {/* for seo purpose /detail/:productName/:productId */}\r\n          <HashRouter>\r\n            <Switch>\r\n            <Route exact path=\"/\">\r\n              <Redirect to=\"/home\"/>\r\n            </Route>\r\n            <Route exact path=\"/home\">\r\n                <HomePage/>\r\n              </Route>\r\n              <Route exact path=\"/productlist\">\r\n                <ProductListingPage />\r\n              </Route>\r\n              <Route exact path=\"/login\">\r\n                <LoginPage\r\n                  authService={this.authService}/>\r\n              </Route>\r\n              <Route exact path=\"/detail/:productId\">\r\n                <ProductDetailPage\r\n                  shoppingCartService={this.shoppingCartService}\r\n                />\r\n                {/* /* new a ProductDetailPage then run constructor(newProductDetailPage({shoppingCartService: this.shoppingCarstService})), pack it as prop and pass back into this function*/}\r\n              </Route>\r\n              <Route exact path=\"/cart\">\r\n                <ShoppingCartPage \r\n                shoppingCartService={this.shoppingCartService}\r\n                />\r\n              </Route>\r\n              <Route exact path=\"/checkout/:transactionId\">\r\n                <CheckoutPage/>\r\n              </Route>\r\n              <Route exact path=\"/weather\">\r\n                <WeatherPage/>\r\n              </Route>\r\n              <Route exact path=\"/thankyoupage\">\r\n                <Thankyoupage/>\r\n              </Route>\r\n            </Switch>\r\n          </HashRouter>\r\n          <ContactUsSection/>\r\n          <Container>\r\n            {/* <MDBFooter color=\"blue\" className=\"font-small pt-4 mt-4\">\r\n              <MDBContainer fluid className=\"text-center text-md-left\">\r\n                <MDBRow>\r\n                  <MDBCol md=\"6\">\r\n                    <h5 className=\"title\">Ventail Snowboard Shop</h5>\r\n                    <p>\r\n                      Ventail Snowboard Shop provides a wide range of equipments in one go.\r\n                    </p>\r\n                  </MDBCol>\r\n                  <MDBCol md=\"6\">\r\n                    <h5 className=\"title\">Links</h5>\r\n                    <ul>\r\n                      <li className=\"list-unstyled\">\r\n                        <a href=\"#/productlist\">Product List</a>\r\n                      </li>\r\n                      <li className=\"list-unstyled\">\r\n                        <a href=\"#/weather\">Weather</a>\r\n                      </li>\r\n                      <li className=\"list-unstyled\">\r\n                        <a href=\"#!\">Location</a>\r\n                      </li>\r\n                      <li className=\"list-unstyled\">\r\n                        <a href=\"#!\">About us</a>\r\n                      </li>\r\n                    </ul>\r\n                  </MDBCol>\r\n                </MDBRow>\r\n              </MDBContainer>\r\n              <div className=\"footer-copyright text-center py-3\">\r\n                <MDBContainer fluid>\r\n                  &copy; {new Date().getFullYear()} Copyright: <a href=\"https://www.mdbootstrap.com\"> MDBootstrap.com </a>\r\n                </MDBContainer>\r\n              </div>\r\n            </MDBFooter> */}\r\n          </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\service\\ShoppingCartService.ts",["118"],"import React from \"react\";\r\nimport { ShoppingCartItem } from \"../domain/shoppingCartDos\";\r\nimport LocalStorageUtil from \"../util/LocalStorageUtil\";\r\n\r\n\r\n\r\nexport default class ShoppingCartService{\r\n    shoppingCartKey = \"cart\";\r\n    shoppingCart: {[key: number]:ShoppingCartItem} = {};\r\n\r\n    constructor(){\r\n        this.shoppingCart = LocalStorageUtil.getValue(this.shoppingCartKey);\r\n        if (!this.shoppingCart){\r\n            this.shoppingCart = {};\r\n        }\r\n    }\r\n\r\n    addToCart(productId: number, productQuantity: number) {\r\n        //if productId=localStorage.productId->shoppingcart[productId].quantity+=quantity.onupdateQuantity value\r\n        this.shoppingCart[productId] = {\r\n            \"productId\": productId,\r\n            \"productQuantity\": productQuantity\r\n        };\r\n        \r\n\r\n        LocalStorageUtil.setValue(this.shoppingCartKey, this.shoppingCart);\r\n        return productQuantity;\r\n    }\r\n\r\n    removeFromCart(productId: number){\r\n        delete this.shoppingCart[productId];\r\n        LocalStorageUtil.setValue(this.shoppingCartKey, this.shoppingCart);\r\n    }\r\n    getCart(){\r\n        return this.shoppingCart;\r\n    }\r\n}","D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\util\\LocalStorageUtil.ts",["119"],"import React from \"react\";\r\n\r\nexport default class LocalStorageUtil {\r\n    //because the value has to be an object, the only way to turn string into object is by turning it into json format\r\n    static setValue(key: string, value: any){\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    }\r\n\r\n    static getValue(key: string){\r\n        const value = localStorage.getItem(key);\r\n\r\n        if(value && value !== 'undefined'){\r\n            return JSON.parse(value);\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    getQuantity(){\r\n        \r\n    }\r\n}","D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\ui\\page\\ShoppingCartPage\\index.tsx",["120","121","122","123","124","125"],"import { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Breadcrumb, Button, Container, Table } from 'react-bootstrap';\r\nimport { DisplayMap, ProductMap, Transaction } from '../../../domain/dto/backendDos';\r\nimport { ShoppingCartItem } from '../../../domain/shoppingCartDos';\r\nimport BackendExtService from '../../../extService/BackendExtService';\r\nimport BackendAuthExtService from '../../../extService/BackendAuthExtService';\r\nimport ShoppingCartService from '../../../service/ShoppingCartService';\r\nimport ProductList from '../../component/ProductList';\r\nimport Quantity from '../../component/quantity';\r\nimport './style.css';\r\nimport AuthService from '../../../service/AuthService';\r\nimport { CreateTransactionRequestDto } from '../../../domain/dto/backendDtos';\r\n\r\ntype Props = {\r\n    shoppingCartService: ShoppingCartService\r\n};\r\ntype State = {\r\n    shoppingCartItems?: DisplayMap\r\n};\r\n\r\nexport default class ShoppingCartPage extends React.Component<Props, State> {\r\n    state = {} as State; //initial state\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.onLoadedShoppingCartItems = this.onLoadedShoppingCartItems.bind(this);\r\n        this.onClickRemoveItemButton = this.onClickRemoveItemButton.bind(this);\r\n        this.onClickCheckoutButton = this.onClickCheckoutButton.bind(this);\r\n        this.onUpdateQuantity = this.onUpdateQuantity.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        const cart = this.props.shoppingCartService.getCart();\r\n        const productIds = Object.keys(cart); /*find out all the keys in the object*/\r\n        BackendExtService.getShoppingCartItems(productIds, this.onLoadedShoppingCartItems)\r\n    }\r\n\r\n    onLoadedShoppingCartItems(data: ProductMap) {\r\n        const cart = this.props.shoppingCartService.getCart();\r\n\r\n        const displayItems: DisplayMap = {};\r\n        for (let productId of Object.keys(data)) {\r\n            const value = data[+productId];\r\n            displayItems[+productId] = {\r\n                id: value.id,\r\n                name: value.name,\r\n                description: value.description,\r\n                price: value.price,\r\n                imageUrl: value.imageUrl,\r\n                quantity: cart[+productId].productQuantity,\r\n                subtotal: value.price * cart[+productId].productQuantity\r\n            };\r\n        }\r\n\r\n        this.setState({\r\n            shoppingCartItems: displayItems\r\n        })\r\n    }\r\n\r\n    onClickCheckoutButton() {\r\n\r\n        if(AuthService.isSignedIn === undefined){\r\n            window.location.href = \"#/login\";\r\n        }\r\n        const checkoutItems: CreateTransactionRequestDto[] = [];\r\n        for (let productId of Object.keys(this.state.shoppingCartItems!)) {\r\n            const item = this.state.shoppingCartItems![+productId];\r\n            checkoutItems.push({\r\n                productId: +productId,\r\n                quantity: item.quantity\r\n            })\r\n        }\r\n\r\n        AuthService.getIdToken()\r\n            .then((idToken) => {\r\n                BackendExtService.checkout(idToken,checkoutItems,this.onCreatedTransaction);})\r\n    }\r\n    \r\n    onCreatedTransaction(data: Transaction) {\r\n        window.location.href = \"#/checkout/\" + data.transactionId;\r\n    }\r\n\r\n    onClickRemoveItemButton(productId: number) {\r\n        this.props.shoppingCartService.removeFromCart(productId);\r\n        // ... this state.shoppingCartItems means take everything\r\n        //inside this.props.displayItems out and put them into the new object\r\n        const shoppingCartItems = { ...this.state.shoppingCartItems };\r\n\r\n        delete shoppingCartItems[productId];\r\n\r\n        this.setState({\r\n            shoppingCartItems: shoppingCartItems\r\n        });\r\n    }\r\n\r\n    onUpdateQuantity(productId: number, quantity: number) {\r\n        quantity = this.props.shoppingCartService.addToCart(productId,quantity);\r\n        \r\n        const shoppingCartItems = {...this.state.shoppingCartItems};\r\n\r\n        shoppingCartItems[productId].quantity = quantity;\r\n        shoppingCartItems[productId].subtotal = shoppingCartItems[productId].price * quantity;\r\n        this.setState({\r\n            shoppingCartItems: shoppingCartItems\r\n        });\r\n    }\r\n\r\n    renderCheckoutSection() {\r\n        if (!this.state.shoppingCartItems) {\r\n            return null;\r\n        }\r\n        let total = 0;\r\n        // the productId is the 1,2 in the shoppingCartItem list and take the sum of the price\r\n        for (let productId of Object.keys(this.state.shoppingCartItems)) {\r\n            total += (this.state.shoppingCartItems[+productId].price*this.state.shoppingCartItems[+productId].quantity);\r\n        }\r\n        return (\r\n            <section>\r\n                { /*TODO*sub total*/}\r\n                <hr /><h3>Total Price: {total}</h3>\r\n                <br/>\r\n                <Button variant=\"primary\" onClick={this.onClickCheckoutButton}>Checkout</Button>\r\n            </section>\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"shoppingCart\">\r\n                <Container>\r\n                    <Breadcrumb>\r\n                        <Breadcrumb.Item href=\"#/\">All Products</Breadcrumb.Item>\r\n                        <Breadcrumb.Item active>Shopping Cart</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n\r\n                    {/* TODO: Add back ProductList Component here*/}\r\n                    <ProductList\r\n                        shouldShowRemoveButton={true}\r\n                        displayItems={this.state.shoppingCartItems}\r\n                        onClickRemoveItemButton={this.onClickRemoveItemButton}\r\n                        onUpdateQuantity={this.onUpdateQuantity}\r\n                        shouldShowQuantityButton={true}\r\n                    />\r\n\r\n                    {this.renderCheckoutSection()}\r\n\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// ArrayList<JSXElement> cartItems = new ArrayList<>();\r\n// for (productIds) {\r\n// \tcartItems.push(\r\n// \t\tnew TableRow(productId)\r\n// \t)\r\n// }\r\n\r\n// return [\r\n// \t<tr>1</tr>,\r\n// \t<tr>2</tr>,\r\n// \t<tr>3</tr>\r\n// ];\r\n\r\n// | |\r\n//  V\r\n\r\n// render() {\r\n// \t<Table>\r\n// \t\t{this.renderShoppingCartItems()}\r\n// \t</Table>\r\n// }\r\n\r\n// | |\r\n//  V\r\n\r\n//  render() {\r\n//  \t<Table>\r\n//  \t\t<tr>1</tr>\r\n// \t\t<tr>2</tr>\r\n// \t\t<tr>3</tr>\r\n// \t</Table>\r\n//  }","D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\ui\\page\\ProductListingPage\\index.tsx",["126","127","128"],"import React from 'react';\r\nimport { Button, Card, Container, Toast } from 'react-bootstrap';\r\nimport Navbar from 'react-bootstrap/esm/Navbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { ProductList } from '../../../domain/dto/backendDos';\r\nimport BackendExtService from '../../../extService/BackendExtService';\r\nimport \"./style.css\";\r\n\r\ntype Props = {};\r\ntype State = {\r\n    productList?: ProductList\r\n    isShowToast: boolean\r\n};\r\n\r\nexport default class ProductListingPage extends React.Component<Props, State> {\r\n    state = {} as State;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.onLoadedProductList = this.onLoadedProductList.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n        BackendExtService.getProductList(this.onLoadedProductList)\r\n    }\r\n\r\n    onLoadedProductList(data: ProductList) {\r\n        this.setState({ productList: data });\r\n    }\r\n\r\n    renderProductItems() {\r\n        \r\n        const cards: JSX.Element[] = [];\r\n        if (!this.state.productList) {\r\n            return null;\r\n        }\r\n        for (let item of this.state.productList) {\r\n            cards.push(\r\n                <Link to={\"/detail/\" + item.id}>\r\n                    <Card className=\"productCard\">\r\n                        <Card.Img className=\"image centerCropped\" variant=\"top\" src={item.imageUrl} />\r\n                        <Card.Body>\r\n                            <Card.Title>{item.name}</Card.Title>\r\n                            <Card.Text>\r\n                                ${item.price}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Link>\r\n            )\r\n        }\r\n        return cards;\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"productListingPage\">\r\n                <Container>\r\n                    <div className=\"productContainer\">                        \r\n                        {\r\n                            (this.renderProductItems()) ? this.renderProductItems() : (\r\n                                <div>Loading</div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\ui\\page\\CheckoutPage\\index.tsx",["129","130"],"import React from \"react\";\r\nimport { Col, Container, Form } from \"react-bootstrap\";\r\nimport Breadcrumb from \"react-bootstrap/esm/Breadcrumb\";\r\nimport Table from \"react-bootstrap/esm/Table\";\r\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\r\nimport { DisplayMap, ProductItem, Transaction } from \"../../../domain/dto/backendDos\";\r\nimport BackendExtService from \"../../../extService/BackendExtService\";\r\nimport AuthService from \"../../../service/AuthService\";\r\nimport ProductList from \"../../component/ProductList\";\r\nimport \"./style.css\"\r\n\r\ntype RouterParamProps = {\r\n    transactionId: string\r\n}\r\ntype Props = RouteComponentProps<RouterParamProps> & {\r\n    // shouldShowQuantityButton:boolean\r\n};\r\ntype State = {\r\n    \r\n    transaction?: Transaction;\r\n\r\n    creditCardNumber: string,\r\n    expiryDate: string,\r\n    cvv: string\r\n};\r\n\r\nclass CheckoutPage extends React.Component<Props, State>{\r\n    state = {\r\n        creditCardNumber: \"\",\r\n        expiryDate: \"\",\r\n        cvv: \"\"\r\n    } as State;    //Initial State\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.onLoadedTransaction = this.onLoadedTransaction.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        AuthService.getIdToken()\r\n            .then((idtoken)=>{\r\n                BackendExtService.getTransaction(idtoken,\r\n                    +this.props.match.params.transactionId,\r\n                    this.onLoadedTransaction)\r\n            })\r\n    }\r\n\r\n    onLoadedTransaction(data: Transaction) {\r\n        this.setState({\r\n            transaction: data\r\n        });\r\n    }\r\n\r\n    handleInputChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        //@ts-ignore\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    renderProductList() {\r\n        if (!this.state.transaction) {\r\n            return null;\r\n        }\r\n        const items = this.state.transaction.items;\r\n        const checkoutItems: DisplayMap = {};\r\n        for (let item of items) {\r\n            const details = item.details;\r\n            checkoutItems[item.details.id] = {\r\n                id: details.id,\r\n                name: details.name,\r\n                description: details.description,\r\n                price: details.price,\r\n                imageUrl: details.imageUrl,\r\n                quantity: item.quantity,\r\n                subtotal: item.subtotal\r\n            }\r\n        }\r\n\r\n        return (\r\n            <section>\r\n                <ProductList\r\n                    shouldShowRemoveButton={false}\r\n                    displayItems={checkoutItems}\r\n                    shouldShowQuantityButton={false}\r\n                    \r\n                />\r\n                <h3>Total: ${this.state.transaction.total}</h3>\r\n            </section>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"checkout\">\r\n                <Container>\r\n                    <div>\r\n                        <Breadcrumb>\r\n                            <Breadcrumb.Item href=\"#/\">All Products</Breadcrumb.Item>\r\n                            <Breadcrumb.Item href=\"#/cart\">Shopping Cart</Breadcrumb.Item>\r\n                            <Breadcrumb.Item active>Checkout</Breadcrumb.Item>\r\n                        </Breadcrumb>\r\n\r\n                        <h1>Checkout</h1>\r\n                        {this.renderProductList()}\r\n                    </div>\r\n                    <Form>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"creditCardNumber\">\r\n                                <Form.Label>Credit Card #</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"creditCardNumber\"\r\n                                    value={this.state.creditCardNumber}\r\n                                    placeholder=\"Credit Card Number\"\r\n                                    onChange={this.handleInputChange}\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} controlId=\"expiryDate\">\r\n                                <Form.Label>Expiry Date</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"expiryDate\"\r\n                                    value={this.state.expiryDate}\r\n                                    placeholder=\"Expiry Date\"\r\n                                    onChange={this.handleInputChange}\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} controlId=\"cvv\">\r\n                                <Form.Label>CVV</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"password\"\r\n                                    name=\"cvv\"\r\n                                    value={this.state.cvv}\r\n                                    placeholder=\"CVV\"\r\n                                    onChange={this.handleInputChange}\r\n                                />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                    </Form>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(CheckoutPage);","D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\extService\\BackendExtService.ts",["131","132","133","134","135","136","137","138"],"import React from \"react\";\r\nimport { DisplayMap, ProductItem, ProductList, ProductMap, Transaction } from \"../domain/dto/backendDos\";\r\nimport { CheckoutResponseDto, CreateTransactionRequestDto, ProductDetailResponseDto, ProductListResponseDto, ShoppingCartItemsResponseDto, TransactionResponseDto } from \"../domain/dto/backendDtos\";\r\nimport mockProductList from './products.json';\r\nimport mockProductDetail from './productDetail.json';\r\nimport mockinShoppingCartItems from './shoppingCartItems.json';\r\nimport mockCheckout from './checkout.json';\r\nimport { ShoppingCartItem } from \"../domain/shoppingCartDos\";\r\nimport axios from \"axios\";\r\nimport config from \"../config/config\";\r\n\r\nexport default class BackendExtService{\r\n\r\n    static getProductList(callback: (data: ProductList) => void){\r\n       axios.get<ProductListResponseDto>(config().backend.baseUrl + \"/public/product/all\")\r\n       .then(response =>{\r\n            callback(response.data as ProductList);\r\n        })\r\n    }\r\n    static getProductDetail(productId: number, callback: (data: ProductItem) => void) {\r\n      axios.get<ProductDetailResponseDto>(config().backend.baseUrl + \"/public/product/details?productId=\"+productId)\r\n      .then(response => {\r\n            callback(response.data as ProductItem);\r\n        })\r\n    }\r\n    static getShoppingCartItems(productIds: string[], callback: (data: ProductMap)=>void){\r\n        axios.post<ProductDetailResponseDto>(config().backend.baseUrl + \"/public/product/search/ids\", productIds)\r\n            .then(response => {\r\n                callback(response.data as ProductMap);\r\n\r\n            // when one day DO is finally mismatch with the DTO:\r\n            // callback({\r\n            //     productName: data.name,\r\n            //     productPrice: data.price,\r\n            //     productDescription: data.description,\r\n            //     ...\r\n            // })\r\n        })\r\n    }\r\n    static checkout(idToken:string,items: CreateTransactionRequestDto[], callback: (data: Transaction) => void){\r\n        axios.post<CheckoutResponseDto>(config().backend.baseUrl + \"/transaction\", items,{\r\n            headers: {\r\n                Authorization:\"Bearer \" + idToken\r\n            }\r\n        })\r\n        .then(response => { \r\n            callback(response.data as Transaction);\r\n        })\r\n    }\r\n    static getTransaction(idToken:string, transactionId: number, callback: (data: Transaction) => void){\r\n        axios.get<TransactionResponseDto>(config().backend.baseUrl + \"/transaction/\"+ transactionId,{\r\n            headers: {\r\n                Authorization:\"Bearer \" + idToken\r\n            }\r\n        })\r\n        .then(response => {\r\n            callback(response.data as Transaction);\r\n        })\r\n\r\n\r\n    //     This is a dummy example\r\n    // static getTransaction(transactionId: number, callback: (data: Transaction) => void){\r\n    //     new Promise((resolve, reject)=>{\r\n    //         setTimeout(()=>{\r\n    //             resolve(mockCheckout as CheckoutResponseDto);\r\n    //         },1000);\r\n    //     }).then(data => {\r\n    //         callback(data as Transaction);\r\n    //     })\r\n    }\r\n\r\n    //postPayment API\r\n}","D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\ui\\component\\ProductList\\index.tsx",["139","140"],"import { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/esm/Button';\r\nimport Table from 'react-bootstrap/esm/Table';\r\nimport { DisplayMap } from '../../../domain/dto/backendDos';\r\nimport ShoppingCartService from '../../../service/ShoppingCartService';\r\nimport Quantity from '../quantity';\r\n\r\ntype Props = {\r\n    shouldShowRemoveButton: boolean,\r\n    displayItems?: DisplayMap,\r\n    onClickRemoveItemButton?: (productId: number) => void,\r\n    onUpdateQuantity?: (productId: number, quantity: number) => void,\r\n    shouldShowQuantityButton: boolean\r\n};\r\ntype State = {};\r\n\r\nexport default class ProductList extends React.Component<Props, State> {\r\n    renderListItems(){\r\n        const cartItems: JSX.Element[]=[];\r\n\r\n        if(!this.props.displayItems){\r\n            return null;\r\n        }\r\n\r\n        for (let productId of Object.keys(this.props.displayItems)){\r\n            //get the actual shopping cart item from this.props.displayItems by the key \"productId\"\r\n            //Prefixed a \"+\" to productId to convert it from string to number\r\n            const item = this.props.displayItems[+productId];\r\n            //const product= this.props.shoppingCartService.getCart()[+productId]\r\n            cartItems.push(\r\n                <tr>\r\n                <td><img className=\"cartImg\" src={item.imageUrl}/></td>\r\n                <td>{item.name}</td>\r\n                <td>{item.price}</td>\r\n                <Container>\r\n                    {\r\n                        (this.props.shouldShowQuantityButton)?\r\n                        (<td><Quantity\r\n                            productId={+productId}\r\n                            quantity={item.quantity}\r\n                            onUpdateQuantity={this.props.onUpdateQuantity!}\r\n                            />\r\n                        </td>) : <td>{item.quantity}</td>\r\n                    }\r\n                </Container>\r\n                \r\n                \r\n\r\n                <td>{item.subtotal}</td>\r\n                <Container>\r\n                    {\r\n                        (this.props.shouldShowRemoveButton) ? (\r\n                            <td>    \r\n                                <Button \r\n                                variant=\"danger\" \r\n                                onClick={() => this.props.onClickRemoveItemButton!(item.id)}\r\n                                >\r\n                                <FontAwesomeIcon icon={faTrashAlt}/>Delete\r\n                                </Button>\r\n                            </td>\r\n                        ) : null\r\n                    }\r\n                </Container>\r\n                \r\n               </tr>\r\n            )\r\n        }\r\n        return cartItems\r\n    }\r\n \r\n    render() {\r\n        return(\r\n            <Table striped bordered hover>\r\n            <thead>\r\n                <tr>\r\n                    <th>Image</th>\r\n                    <th>Product Name</th>\r\n                    <th>Unit Price</th>\r\n                    <th>Quantity</th>\r\n                    <th>Subtotal</th>\r\n                    {\r\n                        (this.props.shouldShowRemoveButton) ? (\r\n                            <th>Action</th>\r\n                        ) : null\r\n                    }\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                    {this.renderListItems()}\r\n            </tbody>\r\n        </Table>\r\n        );\r\n    }\r\n}","D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\ui\\component\\quantity\\index.tsx",[],"D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\ui\\page\\ThankyouPage\\index.tsx",["141"],"import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport './style.css';\r\n\r\ntype Props = {};\r\ntype State = {};\r\n\r\nexport default class Thankyoupage extends React.Component<Props, State> {\r\n\r\n    state = {} as State;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"thank\">\r\n                <Container>\r\n                    hi\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\ui\\page\\HomePage\\index.tsx",["142","143"],"import React from 'react'\r\nimport { Button, Carousel, Container } from 'react-bootstrap';\r\nimport runway from '../../../image/runway.jpg';\r\nimport whistler from '../../../image/Whistler1.jpg';\r\nimport winterbackground from '../../../image/winterbackground.png';\r\nimport photo from '../../../image/1346.png';\r\nimport \"./style.css\";\r\n\r\ntype Props = {};\r\ntype State = {};\r\n\r\nexport default class HomePage extends React.Component<Props, State> {\r\n\r\n    state = {} as State;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n    }\r\n\r\n    onClickToProductList(){\r\n        window.location.href='#/productlist'\r\n    }\r\n    onClickToWeather(){\r\n        window.location.href='#/weather'\r\n    }\r\n    onClickToBus(){\r\n        window.location.href='#/bus'\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"homepage\">\r\n                <Container>\r\n                    <Carousel>\r\n                    <Carousel.Item>\r\n                        <img\r\n                            className=\"homepage\"\r\n                            src= {whistler}\r\n                            alt=\"First slide\"\r\n                        />\r\n                        <Carousel.Caption>\r\n                            <h2 className=\"wordstyle\">Your journey starts here</h2><br/>\r\n                            <Button variant=\"dark\" onClick={this.onClickToProductList}>Discover Here</Button>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item>\r\n                        <img\r\n                            className=\"homepage\"\r\n                            src={runway}\r\n                            alt=\"Second slide\"\r\n                        />\r\n\r\n                        <Carousel.Caption>\r\n                            <h1 className=\"wordstyle\">What's the weather like?</h1><br/>\r\n                            <p className=\"wordstyle\">Click below to get a weather forecast</p><br/>\r\n                            <Button variant=\"dark\" onClick={this.onClickToWeather}>Check Now</Button>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item>\r\n                        <img\r\n                            className=\"homepage\"\r\n                            src={winterbackground}\r\n                            alt=\"Third slide\"\r\n                        />\r\n\r\n                        <Carousel.Caption>\r\n                            <h3 className=\"wordstyle\">Visit us?</h3><br/>\r\n                            <Button variant=\"dark\" onClick={this.onClickToBus}>Find Us</Button>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                </Carousel>\r\n                </Container>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}","D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\service\\AuthService.ts",["144"],"import firebase from 'firebase';\r\nimport { UserInfo } from '../domain/backendAuthDos';\r\nimport React from 'react'\r\nimport BackendAuthExtService from '../extService/BackendAuthExtService';\r\n\r\ntype OnAuthStateChange = (isLoading: boolean) => void;\r\ntype OnSignInError = (code: string, message: string) => void;\r\n\r\nexport default class AuthService {\r\n  firebaseConfig = {\r\n    apiKey: \"AIzaSyA8QwQuc5kHcPXv2CSwjph2C_pznIAZZ0Y\",\r\n    authDomain: \"rafe-venturenix-project.firebaseapp.com\",\r\n    projectId: \"rafe-venturenix-project\",\r\n    storageBucket: \"rafe-venturenix-project.appspot.com\",\r\n    messagingSenderId: \"214419668077\",\r\n    appId: \"1:214419668077:web:be42c5b042ed852cff9364\",\r\n    measurementId: \"G-1HF0PJ0NTK\"\r\n  };\r\n\r\n  static isInitializing: boolean = false;\r\n\r\n  static signedInUserInfo?: UserInfo;\r\n\r\n  onAuthStateChange: OnAuthStateChange;\r\n\r\n  constructor(onAuthStateChange: OnAuthStateChange) {\r\n    this.onAuthStateChange = onAuthStateChange;\r\n  }\r\n\r\n  //because this idToken is needed many times\r\n  static getIdToken(){\r\n    // from reference, the false idtoken is to get the already login idtoken; if true, it will get a new token\r\n    if (!AuthService.isInitializing){\r\n      return firebase.auth().currentUser!.getIdToken(/*foreceRefresh*/false)\r\n    } else {\r\n      return new Promise<firebase.User | null>((resolve, reject) =>{\r\n        const unsubscribe = firebase.auth().onAuthStateChanged((user)=>{\r\n          unsubscribe();\r\n          resolve(user);\r\n        })\r\n      }).then(()=>firebase.auth().currentUser!.getIdToken(/*forceRefresh*/false))\r\n    }\r\n    \r\n\r\n  }\r\n\r\n  init() {\r\n    AuthService.isInitializing = true;\r\n\tif (!firebase.apps.length){\r\n      firebase.initializeApp(this.firebaseConfig);\r\n    } else{\r\n      firebase.app();\r\n    }\r\n    \r\n    //below kinda blackbox, for firebase received email,password and pass it as user in onAuthStateChange function\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      AuthService.isInitializing = false;\r\n      console.log(\"onAuthStateChanged: \", user)\r\n      if (user) {\r\n        //signed in\r\n        // Get the latest id_token from Firebase directly\r\n        firebase.auth().currentUser!.getIdToken(false)\r\n          .then((idToken)=>{\r\n              BackendAuthExtService.getMyUserInfo(idToken, (userInfo)=>{\r\n                // this.signedInEmail = user?.email;\r\n                AuthService.signedInUserInfo=userInfo;\r\n                console.log(\"Login Success!\", AuthService.signedInUserInfo.uid);\r\n                this.onAuthStateChange(false);\r\n                window.location.href=\"#/\"\r\n              })\r\n          })\r\n    \r\n      } else {\r\n        //signed out\r\n        // this.signedInEmail = undefined;\r\n        AuthService.signedInUserInfo = undefined;\r\n        this.onAuthStateChange(false)\r\n      }\r\n    })\r\n  }\r\n\r\n  static isSignedIn() {\r\n    return AuthService.signedInUserInfo !== undefined && AuthService.signedInUserInfo !== null;\r\n  }\r\n\r\n  signInWithEmailPassword(email: string, password: string, onError: OnSignInError) {\r\n    this.onAuthStateChange(true);\r\n\r\n    firebase.auth().signOut()\r\n      .then(() => {\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n          .catch((error) => {\r\n            console.log(error);\r\n            onError(error.code, error.message);\r\n            this.onAuthStateChange(false);\r\n          });\r\n      });\r\n  }\r\n\r\n  signInWithGoogle(onError: OnSignInError) {\r\n    this.onAuthStateChange(true);\r\n\r\n    firebase.auth().signOut()\r\n      .then(() => {\r\n        const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n          .catch((error) => {\r\n            console.log(error);\r\n            onError(error.code, error.message);\r\n            this.onAuthStateChange(false);\r\n          });\r\n      });\r\n  }\r\n\r\n  signInWithFacebook(onError: OnSignInError) {\r\n    this.onAuthStateChange(true);\r\n\r\n    firebase.auth().signOut()\r\n      .then(() => {\r\n        const facebookAuthProvider = new firebase.auth.FacebookAuthProvider();\r\n        firebase.auth().signInWithPopup(facebookAuthProvider)\r\n          .catch((error) => {\r\n            console.log(error);\r\n            onError(error.code, error.message);\r\n            this.onAuthStateChange(false);\r\n          });\r\n      });\r\n  }\r\n\r\n  signOut() {\r\n    this.onAuthStateChange(true);\r\n    firebase.auth().signOut()\r\n  }\r\n}","D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\extService\\BackendAuthExtService.ts",["145"],"import axios from 'axios';\r\nimport { UserInfo } from '../domain/backendAuthDos';\r\nimport React from 'react';\r\nimport { UserInfoResponseDto } from '../domain/dto/bakcendAuthDtos';\r\nimport config from '../config/config';\r\n\r\nexport default class BackendAuthExtService {\r\n    static getMyUserInfo(idToken: string, callback: (data: UserInfo) => void){\r\n        axios.get<UserInfoResponseDto>(config().backend.baseUrl + \"/user/info/me\", {\r\n            headers: {\r\n                Authorization: \"Bearer \" + idToken\r\n            }\r\n        })\r\n            .then((response)=>{\r\n                callback(response.data as UserInfo);\r\n            })\r\n    }\r\n}","D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\ui\\page\\LoginPage\\index.tsx",[],"D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\ui\\page\\WeatherPage\\index.tsx",["146"],"import React from 'react'\r\n\r\ntype Props = {};\r\ntype State = {};\r\n\r\nexport default class WeatherPage extends React.Component<Props, State> {\r\n\r\n    state = {} as State;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <h1>Under Construction</h1>\r\n        )\r\n    }\r\n}","D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\ui\\page\\ProductDetailPage\\index.tsx",["147","148"],"import React from \"react\";\r\nimport { Breadcrumb, Container, Form, Toast } from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/esm/Button\";\r\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\r\nimport { ProductItem } from \"../../../domain/dto/backendDos\";\r\nimport { ShoppingCartItem } from \"../../../domain/shoppingCartDos\";\r\nimport BackendExtService from \"../../../extService/BackendExtService\";\r\nimport ShoppingCartService from \"../../../service/ShoppingCartService\";\r\nimport Quantity from \"../../component/quantity\";\r\nimport \"./style.css\";\r\n\r\ntype RouterParams = {\r\n    productId: string\r\n};\r\n\r\ntype Props = RouteComponentProps<RouterParams> & {\r\n    shoppingCartService: ShoppingCartService\r\n    \r\n};\r\ntype State = {\r\n    productDetail?: ProductItem\r\n    productQuantity: number\r\n    isShowToast: boolean\r\n};\r\n\r\nclass ProductDetailPage extends React.Component<Props, State> {\r\n    state = {\r\n        isShowToast: false,\r\n        productQuantity:1\r\n    } as State;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.onClickAddToCartButton = this.onClickAddToCartButton.bind(this);\r\n        this.onLoadedProductDetail = this.onLoadedProductDetail.bind(this);\r\n        this.onCloseToast = this.onCloseToast.bind(this);\r\n        this.onUpdateQuantity = this.onUpdateQuantity.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        BackendExtService.getProductDetail(+this.props.match.params.productId, this.onLoadedProductDetail);    \r\n    }\r\n\r\n    onLoadedProductDetail(data: ProductItem) {\r\n        this.setState({ productDetail: data });\r\n    }\r\n\r\n    onClickAddToCartButton() {\r\n        const shoppingCartService = this.props.shoppingCartService;\r\n        const productDetail = this.state.productDetail!;\r\n        const productQuantity = this.state.productQuantity;       \r\n        shoppingCartService.addToCart(productDetail.id,productQuantity);\r\n        this.setState({\r\n            isShowToast: true\r\n        });\r\n    }\r\n\r\n    onUpdateQuantity(productId: number, quantity: number) {\r\n        // alert(productId + \": \" + quantity);\r\n        // ShoppingCartService update product's quantity\r\n\r\n        // setState to update quantity\r\n        this.setState({\r\n            productQuantity: quantity\r\n        })\r\n    }\r\n\r\n    renderProductDetail() {\r\n        const productDetail = this.state.productDetail!;\r\n\r\n        return (\r\n            <div>\r\n                <Breadcrumb>\r\n                    <Breadcrumb.Item href=\"#/\">All Products</Breadcrumb.Item>\r\n                    <Breadcrumb.Item active>{productDetail.name}</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <h1>{productDetail.name}</h1>\r\n                <img className=\"bannerImage\" src={productDetail.imageUrl} alt={\"Product \" + productDetail.name + \" Image\"} />\r\n\r\n                <h3>Description: </h3>\r\n                <p>{productDetail.description}</p>\r\n\r\n                <h4>Price: ${productDetail.price}</h4>\r\n                \r\n                <Quantity \r\n                    productId={productDetail.id}\r\n                    quantity={this.state.productQuantity}\r\n                    onUpdateQuantity={this.onUpdateQuantity}\r\n                />\r\n                <br/>\r\n                <Button\r\n                    variant=\"primary\"\r\n                    onClick={this.onClickAddToCartButton}\r\n                >\r\n                    Add to cart\r\n                </Button>\r\n                <br/>\r\n                <br/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onCloseToast() {\r\n        this.setState({\r\n            isShowToast: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"productDetail\">\r\n                <Container id=\"productDetailPage\">\r\n                    <div className=\"toastContainer\">\r\n                        <Toast show={this.state.isShowToast} onClose={this.onCloseToast} delay={3000} autohide>\r\n                            <Toast.Header>\r\n                                <strong className=\"mr-auto\">Added</strong>\r\n                                <small>Click to close</small>\r\n                            </Toast.Header>\r\n                            <Toast.Body>It has been added to the cart. You can continue shopping</Toast.Body>\r\n                        </Toast>\r\n                    </div>\r\n                    {\r\n                        (this.state.productDetail) ? this.renderProductDetail() : (\r\n                            <div>Loading...</div>\r\n                        )\r\n                    }\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default withRouter(ProductDetailPage);","D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\config\\config.ts",[],"D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\config\\prodConfig.ts",["149"],"export default {\r\n    backend: {\r\n        baseUrl: \"http://ec2-18-141-139-88.ap-southeast-1.compute.amazonaws.com:8080\"\r\n    },\r\n    busmapper: {\r\n        frontendBaseUrl: \"\"\r\n    }\r\n}","D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\config\\devConfig.ts",["150"],"export default {\r\n    backend: {\r\n        baseUrl: \"http://localhost:8787\"\r\n    },\r\n    busmapper: {\r\n        frontendBaseUrl: \"http://localhost:3020\"\r\n    }\r\n}","D:\\Venturnix\\ecommerce\\ecommerce-frontend\\src\\ui\\component\\ContactUsSection\\index.tsx",["151","152"],"import React from 'react'\r\nimport { Button, Col, Container, Row } from 'react-bootstrap';\r\nimport config from '../../../config/config';\r\nimport \"./style.css\";\r\n\r\ntype Props = {};\r\ntype State = {};\r\n\r\nexport default class ContactUsSection extends React.Component<Props, State> {\r\n\r\n    state = {} as State;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        \r\n    }\r\n    onClickGetThereButton(event: React.MouseEvent<HTMLButtonElement>){\r\n        window.open(\r\n            config().busmapper.frontendBaseUrl + \"/#/EiZBbGRyaWNoIEJheSBSZCwgQWxkcmljaCBCYXksIEhvbmcgS29uZyIuKiwKFAoSCd8sWCl4AQQ0EU_PTF0tbPvlEhQKEglLSK9JdwEENBGAraT03BRFHQ\"\r\n            , '_blank'\r\n        )!.focus();\r\n    }\r\n    render(){\r\n        return (\r\n            <Container>\r\n            <section className=\"contactUsContainer\">\r\n                \r\n                    <Row>\r\n                        <Col md={6}>\r\n                        {/* <a href=\"https://www.google.com/maps/place/oi+yin+street,+aldrich+bay+road/\"/>\r\n                            <img className=\"map\" src=\"https://maps.googleapis.com/maps/api/staticmap?center=oi+yin+street,+aldrich+bay+road&zoom=16&scale=1&size=600x300&maptype=roadmap&key=AIzaSyCjCVCEaRCewdaqDQE6ocCPC1x_W-EsS-g&format=png&visual_refresh=true&markers=size:mid%7Ccolor:0xff0000%7Clabel:%7Coi+yin+street,+aldrich+bay+road\" alt=\"Google Map of oi yin street, aldrich bay road\"/> */}\r\n                            <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3691.9576007882424!2d114.22593961486216!3d22.27959588533427!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3404017830f024bf%3A0x62f77245bde3831!2z5oSb56ep5bqP54Gj5oSb56ep5bqP54Gj6YGTICYg5oSb6LOi6KGX!5e0!3m2!1szh-TW!2shk!4v1617937428015!5m2!1szh-TW!2shk\" width=\"75%\" height=\"300\" style={{border:0}} loading=\"lazy\"></iframe>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <h2>Contact Us</h2>\r\n                            Phone: 91234567\r\n                            <br/>\r\n                            Address: xxx,Shau Kei Wan\r\n                            <br/>\r\n                            <Button \r\n                                variant='primary'\r\n                                onClick={this.onClickGetThereButton}>Get there\r\n                            </Button>\r\n                            <br/>\r\n                            <h2>Link</h2>\r\n                            <p>Shop</p>\r\n                            <p>Weather</p>\r\n                            <p>Find us</p>\r\n                        </Col>\r\n                    </Row>\r\n                \r\n            </section>\r\n            </Container>\r\n        )\r\n    }\r\n}",{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":1,"column":26,"nodeType":"159","messageId":"160","endLine":1,"endColumn":40},{"ruleId":"157","severity":1,"message":"161","line":4,"column":26,"nodeType":"159","messageId":"160","endLine":4,"endColumn":33},{"ruleId":"157","severity":1,"message":"162","line":18,"column":10,"nodeType":"159","messageId":"160","endLine":18,"endColumn":16},{"ruleId":"157","severity":1,"message":"163","line":18,"column":18,"nodeType":"159","messageId":"160","endLine":18,"endColumn":30},{"ruleId":"157","severity":1,"message":"164","line":18,"column":32,"nodeType":"159","messageId":"160","endLine":18,"endColumn":41},{"ruleId":"157","severity":1,"message":"165","line":18,"column":43,"nodeType":"159","messageId":"160","endLine":18,"endColumn":49},{"ruleId":"157","severity":1,"message":"166","line":66,"column":11,"nodeType":"159","messageId":"160","endLine":66,"endColumn":34},{"ruleId":"167","severity":1,"message":"168","line":71,"column":47,"nodeType":"169","endLine":71,"endColumn":95},{"ruleId":"157","severity":1,"message":"170","line":1,"column":8,"nodeType":"159","messageId":"160","endLine":1,"endColumn":13},{"ruleId":"157","severity":1,"message":"170","line":1,"column":8,"nodeType":"159","messageId":"160","endLine":1,"endColumn":13},{"ruleId":"157","severity":1,"message":"171","line":1,"column":10,"nodeType":"159","messageId":"160","endLine":1,"endColumn":20},{"ruleId":"157","severity":1,"message":"172","line":2,"column":10,"nodeType":"159","messageId":"160","endLine":2,"endColumn":25},{"ruleId":"157","severity":1,"message":"173","line":4,"column":41,"nodeType":"159","messageId":"160","endLine":4,"endColumn":46},{"ruleId":"157","severity":1,"message":"174","line":6,"column":10,"nodeType":"159","messageId":"160","endLine":6,"endColumn":26},{"ruleId":"157","severity":1,"message":"175","line":8,"column":8,"nodeType":"159","messageId":"160","endLine":8,"endColumn":29},{"ruleId":"157","severity":1,"message":"176","line":11,"column":8,"nodeType":"159","messageId":"160","endLine":11,"endColumn":16},{"ruleId":"157","severity":1,"message":"177","line":2,"column":10,"nodeType":"159","messageId":"160","endLine":2,"endColumn":16},{"ruleId":"157","severity":1,"message":"178","line":2,"column":35,"nodeType":"159","messageId":"160","endLine":2,"endColumn":40},{"ruleId":"157","severity":1,"message":"179","line":3,"column":8,"nodeType":"159","messageId":"160","endLine":3,"endColumn":14},{"ruleId":"157","severity":1,"message":"173","line":4,"column":8,"nodeType":"159","messageId":"160","endLine":4,"endColumn":13},{"ruleId":"157","severity":1,"message":"180","line":6,"column":22,"nodeType":"159","messageId":"160","endLine":6,"endColumn":33},{"ruleId":"157","severity":1,"message":"170","line":1,"column":8,"nodeType":"159","messageId":"160","endLine":1,"endColumn":13},{"ruleId":"157","severity":1,"message":"181","line":2,"column":10,"nodeType":"159","messageId":"160","endLine":2,"endColumn":20},{"ruleId":"157","severity":1,"message":"182","line":3,"column":110,"nodeType":"159","messageId":"160","endLine":3,"endColumn":138},{"ruleId":"157","severity":1,"message":"183","line":4,"column":8,"nodeType":"159","messageId":"160","endLine":4,"endColumn":23},{"ruleId":"157","severity":1,"message":"184","line":5,"column":8,"nodeType":"159","messageId":"160","endLine":5,"endColumn":25},{"ruleId":"157","severity":1,"message":"185","line":6,"column":8,"nodeType":"159","messageId":"160","endLine":6,"endColumn":31},{"ruleId":"157","severity":1,"message":"186","line":7,"column":8,"nodeType":"159","messageId":"160","endLine":7,"endColumn":20},{"ruleId":"157","severity":1,"message":"174","line":8,"column":10,"nodeType":"159","messageId":"160","endLine":8,"endColumn":26},{"ruleId":"157","severity":1,"message":"187","line":8,"column":8,"nodeType":"159","messageId":"160","endLine":8,"endColumn":27},{"ruleId":"167","severity":1,"message":"168","line":35,"column":21,"nodeType":"169","endLine":35,"endColumn":67},{"ruleId":"188","severity":1,"message":"189","line":12,"column":5,"nodeType":"190","messageId":"191","endLine":14,"endColumn":6},{"ruleId":"157","severity":1,"message":"192","line":6,"column":8,"nodeType":"159","messageId":"160","endLine":6,"endColumn":13},{"ruleId":"188","severity":1,"message":"189","line":16,"column":5,"nodeType":"190","messageId":"191","endLine":18,"endColumn":6},{"ruleId":"157","severity":1,"message":"170","line":3,"column":8,"nodeType":"159","messageId":"160","endLine":3,"endColumn":13},{"ruleId":"157","severity":1,"message":"170","line":3,"column":8,"nodeType":"159","messageId":"160","endLine":3,"endColumn":13},{"ruleId":"188","severity":1,"message":"189","line":10,"column":5,"nodeType":"190","messageId":"191","endLine":12,"endColumn":6},{"ruleId":"157","severity":1,"message":"193","line":2,"column":33,"nodeType":"159","messageId":"160","endLine":2,"endColumn":37},{"ruleId":"157","severity":1,"message":"174","line":6,"column":10,"nodeType":"159","messageId":"160","endLine":6,"endColumn":26},{"ruleId":"194","severity":1,"message":"195","line":1,"column":1,"nodeType":"196","endLine":8,"endColumn":2},{"ruleId":"194","severity":1,"message":"195","line":1,"column":1,"nodeType":"196","endLine":8,"endColumn":2},{"ruleId":"188","severity":1,"message":"189","line":13,"column":5,"nodeType":"190","messageId":"191","endLine":17,"endColumn":6},{"ruleId":"197","severity":1,"message":"198","line":33,"column":29,"nodeType":"169","endLine":33,"endColumn":414},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"@typescript-eslint/no-unused-vars","'faSnowboarding' is defined but never used.","Identifier","unusedVar","'Spinner' is defined but never used.","'MDBCol' is defined but never used.","'MDBContainer' is defined but never used.","'MDBFooter' is defined but never used.","'MDBRow' is defined but never used.","'loadingOverlayClassName' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'React' is defined but never used.","'faTrashAlt' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'Table' is defined but never used.","'ShoppingCartItem' is defined but never used.","'BackendAuthExtService' is defined but never used.","'Quantity' is defined but never used.","'Button' is defined but never used.","'Toast' is defined but never used.","'Navbar' is defined but never used.","'ProductItem' is defined but never used.","'DisplayMap' is defined but never used.","'ShoppingCartItemsResponseDto' is defined but never used.","'mockProductList' is defined but never used.","'mockProductDetail' is defined but never used.","'mockinShoppingCartItems' is defined but never used.","'mockCheckout' is defined but never used.","'ShoppingCartService' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'photo' is defined but never used.","'Form' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-global-assign","no-unsafe-negation"]