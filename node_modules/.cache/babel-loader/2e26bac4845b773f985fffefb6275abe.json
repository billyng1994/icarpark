{"ast":null,"code":"import firebase from 'firebase';\nexport default class AuthService {\n  constructor(onAuthStateChange) {\n    this.firebaseConfig = {\n      apiKey: \"AIzaSyA8QwQuc5kHcPXv2CSwjph2C_pznIAZZ0Y\",\n      authDomain: \"rafe-venturenix-project.firebaseapp.com\",\n      projectId: \"rafe-venturenix-project\",\n      storageBucket: \"rafe-venturenix-project.appspot.com\",\n      messagingSenderId: \"214419668077\",\n      appId: \"1:214419668077:web:be42c5b042ed852cff9364\",\n      measurementId: \"G-1HF0PJ0NTK\"\n    };\n    this.signedInEmail = void 0;\n    this.onAuthStateChange = void 0;\n    this.onAuthStateChange = onAuthStateChange;\n  }\n\n  init() {\n    firebase.initializeApp(this.firebaseConfig); //below kinda blackbox, for firebase received email,password and pass it as user in onAuthStateChange function\n\n    firebase.auth().onAuthStateChanged(user => {\n      console.log(\"onAuthStateChanged: \", user);\n\n      if (user) {\n        //signed in\n        this.signedInEmail = user === null || user === void 0 ? void 0 : user.email;\n        this.onAuthStateChange(false);\n      } else {\n        //signed out\n        this.signedInEmail = undefined;\n        this.onAuthStateChange(false);\n      }\n    });\n  }\n\n  isSignedIn() {\n    return this.signedInEmail != undefined && this.signedInEmail != null;\n  }\n\n  signInWithEmailPassword(email, password) {\n    this.onAuthStateChange(true);\n    firebase.auth().signOut().then(() => {\n      firebase.auth().signInWithEmailAndPassword(email, password).catch(error => {\n        console.log(error);\n        this.onAuthStateChange(false);\n      });\n    });\n  }\n\n  signInWithGoogle() {\n    this.onAuthStateChange(true);\n    this.signedInEmail = undefined;\n    firebase.auth().signOut().then(() => {\n      const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n      firebase.auth().signInWithPopup(googleAuthProvider).catch(error => {\n        console.log(error);\n        this.onAuthStateChange(false);\n      });\n    });\n  }\n\n  signOut() {\n    this.onAuthStateChange(true);\n    firebase.auth().signOut();\n  }\n\n}","map":{"version":3,"sources":["D:/Venturnix/ecommerce/ecommerce-frontend/src/service/AuthService.ts"],"names":["firebase","AuthService","constructor","onAuthStateChange","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","signedInEmail","init","initializeApp","auth","onAuthStateChanged","user","console","log","email","undefined","isSignedIn","signInWithEmailPassword","password","signOut","then","signInWithEmailAndPassword","catch","error","signInWithGoogle","googleAuthProvider","GoogleAuthProvider","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AAKA,eAAe,MAAMC,WAAN,CAAkB;AAe/BC,EAAAA,WAAW,CAACC,iBAAD,EAAuC;AAAA,SAdlDC,cAckD,GAdjC;AACfC,MAAAA,MAAM,EAAE,yCADO;AAEfC,MAAAA,UAAU,EAAE,yCAFG;AAGfC,MAAAA,SAAS,EAAE,yBAHI;AAIfC,MAAAA,aAAa,EAAE,qCAJA;AAKfC,MAAAA,iBAAiB,EAAE,cALJ;AAMfC,MAAAA,KAAK,EAAE,2CANQ;AAOfC,MAAAA,aAAa,EAAE;AAPA,KAciC;AAAA,SAJlDC,aAIkD;AAAA,SAFlDT,iBAEkD;AAChD,SAAKA,iBAAL,GAAyBA,iBAAzB;AACD;;AAEDU,EAAAA,IAAI,GAAG;AACLb,IAAAA,QAAQ,CAACc,aAAT,CAAuB,KAAKV,cAA5B,EADK,CAEL;;AACAJ,IAAAA,QAAQ,CAACe,IAAT,GAAgBC,kBAAhB,CAAoCC,IAAD,IAAU;AAC3CC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,IAApC;;AACA,UAAIA,IAAJ,EAAU;AACR;AACA,aAAKL,aAAL,GAAqBK,IAArB,aAAqBA,IAArB,uBAAqBA,IAAI,CAAEG,KAA3B;AACA,aAAKjB,iBAAL,CAAuB,KAAvB;AACD,OAJD,MAIO;AACL;AACA,aAAKS,aAAL,GAAqBS,SAArB;AACA,aAAKlB,iBAAL,CAAuB,KAAvB;AACD;AACF,KAXD;AAYD;;AAEDmB,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKV,aAAL,IAAsBS,SAAtB,IAAmC,KAAKT,aAAL,IAAsB,IAAhE;AACD;;AAEDW,EAAAA,uBAAuB,CAACH,KAAD,EAAgBI,QAAhB,EAAkC;AACvD,SAAKrB,iBAAL,CAAuB,IAAvB;AAEAH,IAAAA,QAAQ,CAACe,IAAT,GAAgBU,OAAhB,GACGC,IADH,CACQ,MAAM;AACV1B,MAAAA,QAAQ,CAACe,IAAT,GAAgBY,0BAAhB,CAA2CP,KAA3C,EAAkDI,QAAlD,EACGI,KADH,CACUC,KAAD,IAAW;AAChBX,QAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACA,aAAK1B,iBAAL,CAAuB,KAAvB;AACD,OAJH;AAKD,KAPH;AAQD;;AAED2B,EAAAA,gBAAgB,GAAG;AACjB,SAAK3B,iBAAL,CAAuB,IAAvB;AACA,SAAKS,aAAL,GAAqBS,SAArB;AAEArB,IAAAA,QAAQ,CAACe,IAAT,GAAgBU,OAAhB,GACGC,IADH,CACQ,MAAM;AACV,YAAMK,kBAAkB,GAAG,IAAI/B,QAAQ,CAACe,IAAT,CAAciB,kBAAlB,EAA3B;AACAhC,MAAAA,QAAQ,CAACe,IAAT,GAAgBkB,eAAhB,CAAgCF,kBAAhC,EACGH,KADH,CACUC,KAAD,IAAW;AAChBX,QAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACA,aAAK1B,iBAAL,CAAuB,KAAvB;AACD,OAJH;AAOD,KAVH;AAWD;;AAEDsB,EAAAA,OAAO,GAAG;AACR,SAAKtB,iBAAL,CAAuB,IAAvB;AACAH,IAAAA,QAAQ,CAACe,IAAT,GAAgBU,OAAhB;AACD;;AAzE8B","sourcesContent":["import firebase from 'firebase';\r\nimport React from 'react'\r\n\r\ntype OnAuthStateChange = (isLoading: boolean) => void;\r\n\r\nexport default class AuthService {\r\n  firebaseConfig = {\r\n    apiKey: \"AIzaSyA8QwQuc5kHcPXv2CSwjph2C_pznIAZZ0Y\",\r\n    authDomain: \"rafe-venturenix-project.firebaseapp.com\",\r\n    projectId: \"rafe-venturenix-project\",\r\n    storageBucket: \"rafe-venturenix-project.appspot.com\",\r\n    messagingSenderId: \"214419668077\",\r\n    appId: \"1:214419668077:web:be42c5b042ed852cff9364\",\r\n    measurementId: \"G-1HF0PJ0NTK\"\r\n  };\r\n\r\n  signedInEmail?: string | null;\r\n\r\n  onAuthStateChange: OnAuthStateChange;\r\n\r\n  constructor(onAuthStateChange: OnAuthStateChange) {\r\n    this.onAuthStateChange = onAuthStateChange;\r\n  }\r\n\r\n  init() {\r\n    firebase.initializeApp(this.firebaseConfig);\r\n    //below kinda blackbox, for firebase received email,password and pass it as user in onAuthStateChange function\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      console.log(\"onAuthStateChanged: \", user)\r\n      if (user) {\r\n        //signed in\r\n        this.signedInEmail = user?.email;\r\n        this.onAuthStateChange(false);\r\n      } else {\r\n        //signed out\r\n        this.signedInEmail = undefined;\r\n        this.onAuthStateChange(false)\r\n      }\r\n    })\r\n  }\r\n\r\n  isSignedIn() {\r\n    return this.signedInEmail != undefined && this.signedInEmail != null;\r\n  }\r\n\r\n  signInWithEmailPassword(email: string, password: string) {\r\n    this.onAuthStateChange(true);\r\n\r\n    firebase.auth().signOut()\r\n      .then(() => {\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n          .catch((error) => {\r\n            console.log(error);\r\n            this.onAuthStateChange(false);\r\n          })\r\n      });\r\n  }\r\n\r\n  signInWithGoogle() {\r\n    this.onAuthStateChange(true);\r\n    this.signedInEmail = undefined;\r\n\r\n    firebase.auth().signOut()\r\n      .then(() => {\r\n        const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n          .catch((error) => {\r\n            console.log(error);\r\n            this.onAuthStateChange(false);\r\n          })\r\n\r\n\r\n      });\r\n  }\r\n\r\n  signOut() {\r\n    this.onAuthStateChange(true);\r\n    firebase.auth().signOut()\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}