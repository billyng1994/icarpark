{"ast":null,"code":"import _classCallCheck from\"D:/Venturnix/ecommerce/ecommerce-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/Venturnix/ecommerce/ecommerce-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import axios from\"axios\";import config from\"../config/config\";var BackendExtService=/*#__PURE__*/function(){function BackendExtService(){_classCallCheck(this,BackendExtService);}_createClass(BackendExtService,null,[{key:\"getProductList\",value:function getProductList(callback){axios.get(config().backend.baseUrl+\"/public/product/all\").then(function(response){callback(response.data);});}},{key:\"getProductDetail\",value:function getProductDetail(productId,callback){axios.get(config().backend.baseUrl+\"/public/product/details?productId=\"+productId).then(function(response){callback(response.data);});}},{key:\"getShoppingCartItems\",value:function getShoppingCartItems(productIds,callback){axios.post(config().backend.baseUrl+\"/public/product/search/ids\",productIds).then(function(response){callback(response.data);// when one day DO is finally mismatch with the DTO:\n// callback({\n//     productName: data.name,\n//     productPrice: data.price,\n//     productDescription: data.description,\n//     ...\n// })\n});}},{key:\"checkout\",value:function checkout(items,callback){axios.post(config().backend.baseUrl+\"/transaction\",items).then(function(response){callback(response.data);});}},{key:\"getTransaction\",value:function getTransaction(transactionId,callback){axios.get(config().backend.baseUrl+\"/transaction/\"+transactionId).then(function(response){callback(response.data);});//     This is a dummy example\n// static getTransaction(transactionId: number, callback: (data: Transaction) => void){\n//     new Promise((resolve, reject)=>{\n//         setTimeout(()=>{\n//             resolve(mockCheckout as CheckoutResponseDto);\n//         },1000);\n//     }).then(data => {\n//         callback(data as Transaction);\n//     })\n}//postPayment API\n}]);return BackendExtService;}();export{BackendExtService as default};","map":{"version":3,"sources":["D:/Venturnix/ecommerce/ecommerce-frontend/src/extService/BackendExtService.ts"],"names":["axios","config","BackendExtService","callback","get","backend","baseUrl","then","response","data","productId","productIds","post","items","transactionId"],"mappings":"8TAQA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,C,GAEqBC,CAAAA,iB,gKAEjB,wBAAsBC,QAAtB,CAA4D,CACzDH,KAAK,CAACI,GAAN,CAAkCH,MAAM,GAAGI,OAAT,CAAiBC,OAAjB,CAA2B,qBAA7D,EACCC,IADD,CACM,SAAAC,QAAQ,CAAG,CACZL,QAAQ,CAACK,QAAQ,CAACC,IAAV,CAAR,CACH,CAHF,EAIF,C,gCACD,0BAAwBC,SAAxB,CAA2CP,QAA3C,CAAkF,CAChFH,KAAK,CAACI,GAAN,CAAoCH,MAAM,GAAGI,OAAT,CAAiBC,OAAjB,CAA2B,oCAA3B,CAAgEI,SAApG,EACCH,IADD,CACM,SAAAC,QAAQ,CAAI,CACZL,QAAQ,CAACK,QAAQ,CAACC,IAAV,CAAR,CACH,CAHH,EAID,C,oCACD,8BAA4BE,UAA5B,CAAkDR,QAAlD,CAAqF,CACjFH,KAAK,CAACY,IAAN,CAAyCX,MAAM,GAAGI,OAAT,CAAiBC,OAAjB,CAA2B,4BAApE,CAAkGK,UAAlG,EACCJ,IADD,CACM,SAAAC,QAAQ,CAAI,CACdL,QAAQ,CAACK,QAAQ,CAACC,IAAV,CAAR,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAXD,EAYH,C,wBACD,kBAAgBI,KAAhB,CAA2CV,QAA3C,CAAiF,CAC7EH,KAAK,CAACY,IAAN,CAAgCX,MAAM,GAAGI,OAAT,CAAiBC,OAAjB,CAA2B,cAA3D,CAA2EO,KAA3E,EACCN,IADD,CACM,SAAAC,QAAQ,CAAI,CACdL,QAAQ,CAACK,QAAQ,CAACC,IAAV,CAAR,CACH,CAHD,EAIH,C,8BACD,wBAAsBK,aAAtB,CAA6CX,QAA7C,CAAmF,CAC/EH,KAAK,CAACI,GAAN,CAAkCH,MAAM,GAAGI,OAAT,CAAiBC,OAAjB,CAA2B,eAA3B,CAA4CQ,aAA9E,EACCP,IADD,CACM,SAAAC,QAAQ,CAAI,CACdL,QAAQ,CAACK,QAAQ,CAACC,IAAV,CAAR,CACH,CAHD,EAMJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,CAED;wCApDiBP,iB","sourcesContent":["import React from \"react\";\r\nimport { ProductItem, ProductList, ProductMap, Transaction } from \"../domain/dto/backendDos\";\r\nimport { CheckoutResponseDto, ProductDetailResponseDto, ProductListResponseDto, ShoppingCartItemsResponseDto, TransactionResponseDto } from \"../domain/dto/backendDtos\";\r\nimport mockProductList from './products.json';\r\nimport mockProductDetail from './productDetail.json';\r\nimport mockinShoppingCartItems from './shoppingCartItems.json';\r\nimport mockCheckout from './checkout.json';\r\nimport { ShoppingCartItem } from \"../domain/shoppingCartDos\";\r\nimport axios from \"axios\";\r\nimport config from \"../config/config\";\r\n\r\nexport default class BackendExtService{\r\n\r\n    static getProductList(callback: (data: ProductList) => void){\r\n       axios.get<ProductListResponseDto>(config().backend.baseUrl + \"/public/product/all\")\r\n       .then(response =>{\r\n            callback(response.data as ProductList);\r\n        })\r\n    }\r\n    static getProductDetail(productId: number, callback: (data: ProductItem) => void) {\r\n      axios.get<ProductDetailResponseDto>(config().backend.baseUrl + \"/public/product/details?productId=\"+productId)\r\n      .then(response => {\r\n            callback(response.data as ProductItem);\r\n        })\r\n    }\r\n    static getShoppingCartItems(productIds: string[], callback: (data: ProductMap)=>void){\r\n        axios.post<ShoppingCartItemsResponseDto>(config().backend.baseUrl + \"/public/product/search/ids\", productIds)\r\n        .then(response => {\r\n            callback(response.data as ProductMap);\r\n\r\n            // when one day DO is finally mismatch with the DTO:\r\n            // callback({\r\n            //     productName: data.name,\r\n            //     productPrice: data.price,\r\n            //     productDescription: data.description,\r\n            //     ...\r\n            // })\r\n        })\r\n    }\r\n    static checkout(items: ShoppingCartItem[], callback: (data: Transaction) => void){\r\n        axios.post<CheckoutResponseDto>(config().backend.baseUrl + \"/transaction\", items)\r\n        .then(response => { \r\n            callback(response.data as Transaction);\r\n        })\r\n    }\r\n    static getTransaction(transactionId: number, callback: (data: Transaction) => void){\r\n        axios.get<TransactionResponseDto>(config().backend.baseUrl + \"/transaction/\"+ transactionId)\r\n        .then(response => {\r\n            callback(response.data as Transaction);\r\n        })\r\n\r\n\r\n    //     This is a dummy example\r\n    // static getTransaction(transactionId: number, callback: (data: Transaction) => void){\r\n    //     new Promise((resolve, reject)=>{\r\n    //         setTimeout(()=>{\r\n    //             resolve(mockCheckout as CheckoutResponseDto);\r\n    //         },1000);\r\n    //     }).then(data => {\r\n    //         callback(data as Transaction);\r\n    //     })\r\n    }\r\n\r\n    //postPayment API\r\n}"]},"metadata":{},"sourceType":"module"}